C51 COMPILER V9.00   INTERRUPT                                                             01/15/2025 09:25:07 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE INTERRUPT
OBJECT MODULE PLACED IN .\Debug\Interrupt.obj
COMPILER INVOKED BY: E:\KEIL\KEIL4\C51\BIN\C51.EXE ..\User\source\Application\Interrupt.c LARGE OMF2 BROWSE INCDIR(..\FU
                    -68xx_Hardware_Driver\Include;..\User\include) DEBUG PRINT(.\Listings\Interrupt.lst) OBJECT(.\Debug\Interrupt.obj)

line level    source

   1          /* --------------------------- (C) COPYRIGHT 2021 Fortiortech ShenZhen -----------------------------
   2              File Name      : Interrupt.c
   3              Author         : Lewis.wang
   4              Version        : V1.0
   5              Date           : 2021-12-04
   6              Description    : This file contains interrupt.c function used for Motor Control.
   7          ----------------------------------------------------------------------------------------------------
   8                                                 All Rights Reserved
   9          ------------------------------------------------------------------------------------------------- */
  10          #include <FU68xx_4.h>
  11          #include <Myproject.h>
  12          #include <UART.h>
  13          uint16 xdata spidebug[4] = { 0 };
  14          uint8 g_1mTick=0;
  15          /* -------------------------------------------------------------------------------------------------
  16              Function Name  : LVW_TSD_INT
  17              Description    : ‰ΩéÂéãÈ¢ÑË≠¶‰∏≠Êñ≠ÔºàLVWÔºâ„ÄÅÊ∏©Â∫¶‰æ¶Êµã‰∏≠Êñ≠ÔºàTSDÔºâ
  18              Date           : 2021-12-04
  19              Parameter      : None
  20          ------------------------------------------------------------------------------------------------- */
  21          void LVW_TSD_INT(void) interrupt 0
  22          {
  23   1          if (ReadBit(LVSR, LVWIF))
  24   1          {
  25   2              if (ReadBit(LVSR, LVWF))
  26   2              {
  27   3                  #if 0                                    // ÂÖ≥Èó≠ËæìÂá∫
                          mcFaultSource = FaultLVW;                // ‰ΩéÂéãÈ¢ÑË≠¶‰øùÊä§
                          #endif
  30   3                  ClrBit(LVSR, LVWF);
  31   3              }
  32   2              
  33   2              ClrBit(LVSR, LVWIF);
  34   2          }
  35   1          
  36   1          if (TSDIF)
  37   1          {
  38   2              TSDIF = 0;
  39   2          }
  40   1      }
  41          
  42          /* -------------------------------------------------------------------------------------------------
  43              Function Name  : FO_INT
  44              Description    : FOÁ°¨‰ª∂ËøáÊµÅ‰∏≠Êñ≠
  45              Date           : 2021-12-04
  46              Parameter      : None
  47          ------------------------------------------------------------------------------------------------- */
  48          #if 0
              void FO_INT(void)    interrupt 1                // Â§ñÈÉ®‰∏≠Êñ≠0Áî®Êù•ÂÅöÁ°¨‰ª∂FOËøáÊµÅ‰∏≠Êñ≠ÔºåÂÖ≥Èó≠ËæìÂ
             -á∫
              {
                  if (IF0)
                  {
                      mcFaultSource = FaultHardOVCurrent;     // Á°¨‰ª∂ËøáÊµÅ‰øùÊä§
C51 COMPILER V9.00   INTERRUPT                                                             01/15/2025 09:25:07 PAGE 2   

                      IF0 = 0;                                // Ê∏ÖÈõ∂‰∏≠Êñ≠Ê†áÂøó
                  }
              }
              #endif
  58          
  59          /* -------------------------------------------------------------------------------------------------
  60              Function Name  : DRV_ISR
  61              Description    : FOC‰∏≠Êñ≠(Drv‰∏≠Êñ≠),ÊØè‰∏™ËΩΩÊ≥¢Âë®ÊúüÊâßË°å‰∏ÄÊ¨°ÔºåÁî®‰∫éÂ§ÑÁêÜÂìçÂ∫îËæÉÈ´òÁöÑÁ®ãÂ
             -∫èÔºå‰∏≠Êñ≠‰ºòÂÖàÁ∫ßÁ¨¨‰∫å„ÄÇDCENÂºÄ‰∫ÜÂ∞±‰ºö‰∫ßÁîü‰∏≠Êñ≠„ÄÇ
  62              Date           : 2021-12-04
  63              Parameter      : None
  64          ------------------------------------------------------------------------------------------------- */
  65          void DRV_ISR(void)     interrupt 3
  66          {
  67   1          if (ReadBit(DRV_SR, FGIF))
  68   1          {
  69   2              ClrBit(DRV_SR, FGIF);
  70   2          }
  71   1          
  72   1          if (ReadBit(DRV_SR, DCIF))
  73   1          {
  74   2        
  75   2              #if (Open_Start_Mode == PLL_Start)
                      {            
                          PLLStateFunction();            
                      }
                      #endif                       
  80   2      
  81   2              DRV_SR = (DRV_SR | SYSTIF) & (~DCIF);
  82   2          }   
  83   1      }
  84          /* -------------------------------------------------------------------------------------------------
  85              Function Name  : TIM2_INT
  86              Description    : TIMER2Ê∫¢Âá∫‰∏≠Êñ≠
  87              Date           : 2021-12-05
  88              Parameter      : None
  89          ------------------------------------------------------------------------------------------------- */
  90          void TIM2_INT(void) interrupt 4
  91          {
  92   1          if (ReadBit(TIM2_CR1, T2IF))
  93   1          {
  94   2              ClrBit(TIM2_CR1, T2IF);
  95   2          }
  96   1      }
  97          /* -------------------------------------------------------------------------------------------------
  98              Function Name  : CMP_ISR
  99              Description    : CMP0/1/2ÔºöÈ°∫ÈÄÜÈ£éÂà§Êñ≠
 100              Date           : 2021-12-30
 101              Parameter      : None
 102          ------------------------------------------------------------------------------------------------- */
 103          void CMP_ISR(void) interrupt 7
 104          {
 105   1          if ((ReadBit(CMP_SR, CMP2IF)) || (ReadBit(CMP_SR, CMP0IF)) || (ReadBit(CMP_SR, CMP1IF)))
 106   1          {
 107   2              BEMFDetectFunc();
 108   2              ClrBit(CMP_SR, CMP2IF);
 109   2              ClrBit(CMP_SR, CMP1IF);
 110   2              ClrBit(CMP_SR, CMP0IF);
 111   2          }
 112   1      }
 113          /* -------------------------------------------------------------------------------------------------
 114              Function Name  : TIM3_INT
C51 COMPILER V9.00   INTERRUPT                                                             01/15/2025 09:25:07 PAGE 3   

 115              Description    : Capture PWMÔºåÁî®‰∫éPWMË∞ÉÈÄü
 116              Date           : 2021-12-04
 117              Parameter      : None
 118          ------------------------------------------------------------------------------------------------- */
 119          void TIM3_INT(void) interrupt 9
 120          {    
 121   1          if (ReadBit(TIM3_CR1, T3IP))//Âë®Êúü‰∏≠Êñ≠
 122   1          {
 123   2              if (mcPwmInput.PWMUpdateFlag != 1)                        //Ëã•Ê≠£Âú®ËÆ°ÁÆóÂç†Á©∫ÊØîÂàô‰∏çÊõ¥Êñ∞
 124   2              {
 125   3                  mcPwmInput.PWMCompare    = TIM3__DR;
 126   3                  mcPwmInput.PWMARR        = TIM3__ARR;
 127   3                  mcPwmInput.PWMUpdateFlag = 1;
 128   3              }
 129   2              
 130   2              ClrBit(TIM3_CR1, T3IP);
 131   2          }
 132   1          
 133   1          if (ReadBit(TIM3_CR1, T3IF))
 134   1          {
 135   2              if (mcPwmInput.PWMUpdateFlag != 1)
 136   2              {
 137   3                  if (ReadBit(P0, PIN1))                                 //PWM 100%ËæìÂá∫
 138   3                  {
 139   4                      mcPwmInput.PWMCompare = 3000;
 140   4                      mcPwmInput.PWMARR     = 3000;
 141   4                  }
 142   3                  else                                                    //PWM 0%ËæìÂá∫
 143   3                  {
 144   4                      mcPwmInput.PWMCompare = 0;
 145   4                      mcPwmInput.PWMARR     = 28000;
 146   4                  }
 147   3                  
 148   3                  mcPwmInput.PWMUpdateFlag = 1;
 149   3              }
 150   2              
 151   2              ClrBit(TIM3_CR1, T3IF);
 152   2          }
 153   1      }
 154          
 155          /* -------------------------------------------------------------------------------------------------
 156              Function Name  : SYStick_INT
 157              Description    : 1msÂÆöÊó∂Âô®‰∏≠Êñ≠ÔºàSYS TICK‰∏≠Êñ≠ÔºâÔºåÁî®‰∫éÂ§ÑÁêÜÈôÑÂä†ÂäüËÉΩÔºåÂ¶ÇÊéßÂà∂ÁéØË∑ØÂì
             -çÂ∫î„ÄÅÂêÑÁßç‰øùÊä§Á≠â„ÄÇ‰∏≠Êñ≠‰ºòÂÖàÁ∫ß‰Ωé‰∫éFO‰∏≠Êñ≠ÂíåFOC‰∏≠Êñ≠„ÄÇ
 158              Date           : 2021-12-04
 159              Parameter      : None
 160          ------------------------------------------------------------------------------------------------- */
 161          void SYStick_INT(void) interrupt 10
 162          {
 163   1          if (ReadBit(DRV_SR, SYSTIF))                                                              // SYS TICK‰
             -∏≠Êñ≠
 164   1          {
 165   2              g_1mTick=1;
 166   2              DRV_SR = (DRV_SR | DCIF) & (~SYSTIF);               // Ê∏ÖÈõ∂Ê†áÂøó‰Ωç
 167   2          }
 168   1      }
 169          
 170          
 171          /* -------------------------------------------------------------------------------------------------
 172              Function Name  : CMP3_INT
 173              Description    : CMP3ÔºöÁ°¨‰ª∂ÊØîËæÉÂô®ËøáÊµÅ‰øùÊä§ÔºåÂÖ≥Êñ≠ËæìÂá∫Ôºå‰∏≠Êñ≠‰ºòÂÖàÁ∫ßÊúÄÈ´ò
 174              Date           : 2021-12-04
C51 COMPILER V9.00   INTERRUPT                                                             01/15/2025 09:25:07 PAGE 4   

 175              Parameter      : None
 176          ------------------------------------------------------------------------------------------------- */
 177          void CMP3_INT(void)  interrupt 12
 178          {
 179   1          if (ReadBit(CMP_SR, CMP3IF))
 180   1          {
 181   2              /* -----‰øùÊä§Â§ÑÁêÜÂÖ≥ËæìÂá∫----- */
 182   2              mcFaultSource = FaultHardOVCurrent;
 183   2              ClrBit(CMP_SR, CMP3IF);
 184   2          }
 185   1      }
 186          
 187          /* -------------------------------------------------------------------------------------------------
 188              Function Name  : TIM4_INT
 189              Description    : Timer4Áî®‰ΩúFGËΩ¨ÈÄüÂèçÈ¶à
 190              Date           : 2021-12-04
 191              Parameter      : None
 192          ------------------------------------------------------------------------------------------------- */
 193          void TIM4_INT(void) interrupt 11
 194          {
 195   1          if (ReadBit(TIM4_CR1, T4IF))
 196   1          {
 197   2              FG.mcSpeedFlt_temp = (uint32)(mcFocCtrl.SpeedFlt * MOTOR_SPEED_BASE) >> 15;           //ÂÆûÈôÖËΩ¨È
             -Äü
 198   2              
 199   2              if ((FG.mcSpeedFlt_temp > 500))
 200   2              {
 201   3                  FG.TIM3_ARR_TEMP = FG.TIMcalc_temp / FG.mcSpeedFlt_temp;
 202   3                  TIM4__ARR = FG.TIM3_ARR_TEMP;
 203   3                  TIM4__DR  = FG.TIM3_ARR_TEMP >> 1;
 204   3              }
 205   2              ClrBit(TIM4_CR1, T4IF);
 206   2          }
 207   1      }
 208          
 209          /* -------------------------------------------------------------------------------------------------
 210              Function Name  : UART2_INT
 211              Description    : UART2 is for communicate with man chip.
 212              Date           : 2024-11-28
 213              Parameter      : None
 214          ------------------------------------------------------------------------------------------------- */
 215          uint16 uart2_frameend = 0x0000;
 216          void UART2_INT(void) interrupt 14
 217          {
 218   1              if(ReadBit(UT2_CR,UT2RI))       
 219   1              {
 220   2                      uart2_data_t.uart2_recdata[uart2_data_t.rec_incount] = (unsigned char)UT2_DR;
 221   2                      uart2_frameend = (uint16)((uart2_frameend<<8) | uart2_data_t.uart2_recdata[uart2_data_t.rec_incount]);
 222   2                      if(uart2_frameend == 0x0123)
 223   2                              UART2_ReciveData();
 224   2                      
 225   2                      uart2_data_t.rec_incount++;
 226   2                      if(uart2_data_t.rec_incount >= UART_MAX)
 227   2                              uart2_data_t.rec_incount = 0;
 228   2                      ClrBit(UT2_CR,UT2RI);
 229   2              }
 230   1              if(ReadBit(UT2_CR,UT2TI)){
 231   2                      if(uart2_data_t.send_outcount != uart2_data_t.send_incount){
 232   3                              UT2_DR = uart2_data_t.uart2_senddata[uart2_data_t.send_outcount++];
 233   3                              if(uart2_data_t.send_outcount >= UART_MAX)
 234   3                                      uart2_data_t.send_outcount = 0;
 235   3                      }
C51 COMPILER V9.00   INTERRUPT                                                             01/15/2025 09:25:07 PAGE 5   

 236   2                      ClrBit(UT2_CR, UT2TI); 
 237   2              }
 238   1      }
 239          
 240          
 241          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    745    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     11    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
