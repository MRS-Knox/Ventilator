C51 COMPILER V9.00   CMP                                                                   01/15/2025 09:25:08 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE CMP
OBJECT MODULE PLACED IN .\Debug\CMP.obj
COMPILER INVOKED BY: E:\KEIL\KEIL4\C51\BIN\C51.EXE ..\User\source\Hardware\CMP.c LARGE OMF2 BROWSE INCDIR(..\FU68xx_Hard
                    -ware_Driver\Include;..\User\include) DEBUG PRINT(.\Listings\CMP.lst) OBJECT(.\Debug\CMP.obj)

line level    source

   1          /* --------------------------- (C) COPYRIGHT 2021 Fortiortech ShenZhen -----------------------------
   2              File Name      : CMP.c
   3              Author         : Lewis.wang
   4              Version        : V1.0
   5              Date           : 2021-12-07
   6              Description    : This file contains CMP function used for Motor Control.
   7          ----------------------------------------------------------------------------------------------------  
   8                                                 All Rights Reserved
   9          ------------------------------------------------------------------------------------------------- */
  10          #include <FU68xx_4_MCU.h>
  11          #include <Myproject.h>
  12          /* -------------------------------------------------------------------------------------------------
  13              Function Name  : CMP0_Init
  14              Description    : CMP0ÂàùÂßãÂåñÈÖçÁΩÆ
  15              Date           : 2021-12-07
  16              Parameter      : None
  17          ------------------------------------------------------------------------------------------------- */
  18          void CMP0_Init(void)
  19          {
  20   1              SetBit(P1_AN , PIN4);                                   //CMP0 PinËÆæÁΩÆ‰∏∫Ê®°ÊãüÊ®°Âºè  +
  21   1              SetBit(P1_AN , PIN6);                                   //CMP1 PinËÆæÁΩÆ‰∏∫Ê®°ÊãüÊ®°Âºè  +
  22   1              SetBit(P2_AN , PIN1);                                   //CMP2 PinËÆæÁΩÆ‰∏∫Ê®°ÊãüÊ®°Âºè  +
  23   1              ClrBit(P1_PU , PIN4);                                   //P14‰∏äÊãâÂÖ≥Èó≠
  24   1                      
  25   1              ClrBit(CMP_CR0 , CMP2IM1);                            //CMP2‰∏≠Êñ≠Ê®°Âºè
  26   1              ClrBit(CMP_CR0 , CMP2IM0);                            //00-->No Interrupt  01-->Rising  10-->Falling   11
             --->Rising/Falling
  27   1              ClrBit(CMP_CR0 , CMP1IM1);                            //CMP1‰∏≠Êñ≠Ê®°Âºè
  28   1              ClrBit(CMP_CR0 , CMP1IM0);                            //00-->No Interrupt  01-->Rising  10-->Falling   11
             --->Rising/Falling
  29   1              ClrBit(CMP_CR0 , CMP0IM1);                            //CMP0‰∏≠Êñ≠Ê®°Âºè
  30   1              ClrBit(CMP_CR0 , CMP0IM0);                            //00-->No Interrupt  01-->Rising  10-->Falling   11
             --->Rising/Falling
  31   1              
  32   1              SetBit(CMP_CR1 , CMP0HYS2);                           //CMP0ËøüÊªûÁîµÂéãÈÖçÁΩÆ
  33   1              ClrBit(CMP_CR1 , CMP0HYS1);                           //111-->¬±12mV   110-->+12mV   101-->-12mV   100-->
             -¬±6mV
  34   1              ClrBit(CMP_CR1 , CMP0HYS0);                           //011-->+6mV    010-->-6mV    001-->¬±3mV    000-->
             -No HYS
  35   1              
  36   1              ClrBit(CMP_CR2 , CMP0MOD1);                           //00-->Êó†ÂÜÖÁΩÆÁîµÈòª3ÊØîËæÉÂô®    01-->ÊúâÂÜÖÁΩÆÁ
             -îµÈòª3ÊØîËæÉÂô®Ê®°Âºè
  37   1              SetBit(CMP_CR2 , CMP0MOD0);                           //10-->3Â∑ÆÂàÜÊØîËæÉÂô®   11-->2ÊØîËæÉÂô®
  38   1              
  39   1              ClrBit(CMP_CR2 , CMP0SEL1);                           //00-->3ÊØîËæÉÂô®ËΩÆËØ¢   01-->P14+Âõ∫ÂÆöÈÄâÊã©CMP0OU
             -T
  40   1              ClrBit(CMP_CR2 , CMP0SEL0);                           //10-->P16+Âõ∫ÂÆöÈÄâÊã©CMP1OUT  11-->P21+Âõ∫ÂÆöÈÄâÊ
             -ã©CMP2OUT
  41   1              
  42   1              ClrBit(CMP_CR2 , CMP0CSEL1);                          //00-->Ê≠£Â∏∏ËΩÆËØ¢Ôºà0.66usÔºâ   01-->Âø´ÈÄüËΩÆËØ¢Ôº
             -à0.33usÔºâ
  43   1              ClrBit(CMP_CR2 , CMP0CSEL0);                          //10-->‰ΩéÈÄüËΩÆËØ¢Ôºà2.67usÔºâ   11-->ÂÅè‰ΩéÈÄüËΩÆËØ
             -¢Ôºà1.33usÔºâ
  44   1              
C51 COMPILER V9.00   CMP                                                                   01/15/2025 09:25:08 PAGE 2   

  45   1              ClrBit(CMP_CR3 , CMPSEL2);                                //011-->P07‰Ωú‰∏∫CMP2ËæìÂá∫
  46   1              SetBit(CMP_CR3 , CMPSEL1);                                //010-->P07‰Ωú‰∏∫CMP1ËæìÂá∫
  47   1              SetBit(CMP_CR3 , CMPSEL0);                                //001-->P07‰Ωú‰∏∫CMP0ËæìÂá∫
  48   1              
  49   1              ClrBit(CMP_CR4 , CMP0_FS);                                //CMP1/2ÂäüËÉΩËΩ¨Áßª  ‰ªÖCMP0_MOD=01Êó∂ÊúâÊïà
  50   1              
  51   1              SetBit(CMP_CR2 , CMP0EN);                                   //CMP0 Enable
  52   1              
  53   1              PCMP1 = 0;
  54   1        PCMP0 = 0;
  55   1              
  56   1              CMP_SAMR = 0x42;                                            //Âª∂ËøüÂºÄÂêØÈááÊ†∑Êó∂Èó¥[7:4]&ÂÖ≥Èó≠ÈááÊ†∑Êó∂Èó¥[3
             -:0]
  57   1                                                                                                  //Âª∂ËøüÊó∂Èó¥= CSOND x 41.67 x 8ns CSOND ÂøÖÈ°ª>= CSOFF
             -D
  58   1              
  59   1              SetBit(CMP_CR3 , SAMSEL1);                                //CMP0/1/2 & ADC ÈááÊ†∑Êó∂Êú∫ÈÖçÁΩÆ
  60   1              ClrBit(CMP_CR3 , SAMSEL0);                                //00-->0N&0FFÈááÊ†∑ÔºåÊó†Âª∂Ëøü   01-->0FFÈááÊ†∑ÔºåÂ
             -ª∂ËøüCMP_SAMR
  61   1                                                                                                              //10-->0NÈááÊ†∑ÔºåÂª∂ËøüCMP_SAMR        11-->0N&0FFÈááÊ†∑ÔºåÂª∂Ëø
             -üCMP_SAMR
  62   1              
  63   1              ClrBit(CMP_CR3 , CMPDTEN);                                //ÊØîËæÉÂô®Ê≠ªÂå∫ÈááÊ†∑‰ΩøËÉΩ 0-->Disable 1-->Enable
  64   1                                         
  65   1              ClrBit(CMP_CR3 , DBGSEL1);                                //DEBUG‰ø°Âè∑ÈÄâÊã©-->ËæìÂá∫Ëá≥P01
  66   1              SetBit(CMP_CR3 , DBGSEL0);                                //00-->Disable                        01-->ÊñπÊ≥¢Â±èËîΩÁª≠ÊµÅÁªìÊùüÂíåÊ£Ä
             -ÊµãÂà∞ËøáÈõ∂ÁÇπ‰ø°Âè∑
  67   1                                                                                                              //10-->ADC trigger‰ø°Âè∑        11-->ÊØîËæÉÂô®ÈááÊ†∑Âå∫Èó¥
  68   1      }
  69          
  70          /* -------------------------------------------------------------------------------------------------
  71              Function Name  : CMP3_Init
  72              Description    : ÊØîËæÉÂô®3ÂàùÂßãÂåñÈÖçÁΩÆÔºåÁî®ÂÅöÁ°¨‰ª∂ËøáÊµÅ
  73              Date           : 2021-12-07
  74              Parameter      : None
  75          ------------------------------------------------------------------------------------------------- */
  76          void CMP3_Init(void)
  77          {   
  78   1          #if (Shunt_Resistor_Mode == Single_Resistor)
  79   1          {
  80   2              SetBit(P2_AN , P27);                                           //CMP3 PinËÆæÁΩÆ‰∏∫Ê®°ÊãüÊ®°Âºè  + 
  81   2              ClrBit(CMP_CR1 , CMP3MOD1);                                  //00-->P27-ÂçïÊØîËæÉÂô®Ê®°Âºè    01--
             ->P20/P23-ÂèåÊØîËæÉÂô®Ê®°Âºè
  82   2              ClrBit(CMP_CR1 , CMP3MOD0);                                  //1X-->P20/P23/P27-‰∏âÊØîËæÉÂô®Ê®°Âºè
  83   2          }
  84   1          #elif (Shunt_Resistor_Mode == Double_Resistor)
                  {
                      SetBit(P2_AN , P27);                                           //CMP3 PinËÆæÁΩÆ‰∏∫Ê®°ÊãüÊ®°Âºè  + 
                      ClrBit(CMP_CR1 , CMP3MOD1);                                  //00-->P27-ÂçïÊØîËæÉÂô®Ê®°Âºè    01--
             ->P20/P23-ÂèåÊØîËæÉÂô®Ê®°Âºè
                      ClrBit(CMP_CR1 , CMP3MOD0);                                  //1X-->P20/P23/P27-‰∏âÊØîËæÉÂô®Ê®°Âºè
                  }
                  #endif      
  91   1          
  92   1          #if (Compare_Mode == Compare_Hardware)
                  {
                      
                      SetBit(P2_AN , P26);
                      ClrBit(P2_OE , P26); 
                      ClrBit(DAC_CR , DAC0_1EN);
                  }
                  #else
C51 COMPILER V9.00   CMP                                                                   01/15/2025 09:25:08 PAGE 3   

 100   1          {
 101   2              ClrBit(DAC_CR , DACMOD);
 102   2              DAC0_DR = DAC_OvercurrentValue;
 103   2              
 104   2              SetBit(DAC_CR , DAC0_1EN);
 105   2          }
 106   1          #endif      
 107   1          
 108   1          SetBit(CMP_CR1 , CMP3HYS);                                        // CMP3 Hysteresis voltage Enable
 109   1          /*---------------------------------------------------------------------------------
 110   1                ÈÄâÊã©ÊØçÁ∫øÁîµÊµÅ‰øùÊä§Ëß¶Âèë‰ø°Âè∑Ê∫êÔºåÂ§ñÈÉ®‰∏≠Êñ≠0ÊàñËÄÖÊØîËæÉÂô®3‰∏≠Êñ≠„ÄÇ
 111   1                0-CMP3,1-INT0
 112   1          ---------------------------------------------------------------------------------*/
 113   1          ClrBit(EVT_FILT , EFSRC);
 114   1          /*---------------------------------------------------------------------------------
 115   1                Ëß¶ÂèëÁ°¨‰ª∂‰øùÊä§ÂêéÁ°¨‰ª∂ÂÖ≥Èó≠È©±Âä®ËæìÂá∫MOEÈÖçÁΩÆ
 116   1                00--MOE‰∏çËá™Âä®Ê∏ÖÈõ∂
 117   1                01--MOEËá™Âä®Ê∏ÖÈõ∂
 118   1          ----------------------------------------------------------------------------------*/
 119   1          ClrBit(EVT_FILT , MOEMD1);
 120   1          SetBit(EVT_FILT , MOEMD0);
 121   1          /*----------------------------------------------------------------------------------
 122   1          ÊØçÁ∫øÁîµÊµÅ‰øùÊä§Êó∂Èó¥Êª§Ê≥¢ÂÆΩÂ∫¶
 123   1          00-‰∏çÊª§Ê≥¢    
 124   1          01-4cpu clock    
 125   1          10-8cpu clock    
 126   1          11-16cpu clock
 127   1          -----------------------------------------------------------------------------------*/
 128   1          SetBit(EVT_FILT , EFDIV1);
 129   1          SetBit(EVT_FILT , EFDIV0);
 130   1      
 131   1          SetBit(CMP_CR1 , CMP3EN);  
 132   1      }
 133          
 134          /* -------------------------------------------------------------------------------------------------
 135              Function Name  : CMP3_Interrupt_Init
 136              Description    : ÊØîËæÉÂô®3‰∏≠Êñ≠ÂàùÂßãÂåñÈÖçÁΩÆ
 137              Date           : 2021-12-04
 138              Parameter      : None
 139          ------------------------------------------------------------------------------------------------- */
 140          void CMP3_Interrupt_Init(void)
 141          {
 142   1          ClrBit(CMP_SR , CMP3IF);
 143   1          /*------------------------------------------------------------------------
 144   1          ÊØîËæÉÂô®‰∏≠Êñ≠Ê®°ÂºèÈÖçÁΩÆ
 145   1          00: ‰∏ç‰∫ßÁîü‰∏≠Êñ≠  
 146   1          01: ‰∏äÂçáÊ≤ø‰∫ßÁîü‰∏≠Êñ≠  
 147   1          10: ‰∏ãÈôçÊ≤ø‰∫ßÁîü‰∏≠Êñ≠  
 148   1          11: ‰∏äÂçá/‰∏ãÈôçÊ≤ø‰∫ßÁîü‰∏≠Êñ≠
 149   1          ------------------------------------------------------------------------*/
 150   1          ClrBit(CMP_CR0 , CMP3IM1);
 151   1          SetBit(CMP_CR0 , CMP3IM0);
 152   1      
 153   1          PCMP31 = 1;
 154   1          PCMP30 = 1;                                           // ‰∏≠Êñ≠‰ºòÂÖàÁ∫ßÂà´3
 155   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    178    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.00   CMP                                                                   01/15/2025 09:25:08 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
